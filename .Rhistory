blockgroup21 <-
get_acs(geography = "block group",
variables = c("B19013_001E","B99051_005E",
"B01003_001E","B07201_003E",
"B07201_001E"),
year=2021, state=42,
county=101, geometry=TRUE) %>%
st_transform('ESRI:102728')
variables2021_blockGroup <- load_variables(2021,'acs5') %>%
dplyr::filter(geography == 'block group')
variables2021_tract <- load_variables(2021,'acs5') %>%
dplyr::filter(geography == 'tract')
blockgroup21 <-
blockgroup21 %>%
dplyr::select( -NAME, -moe) %>%
spread(key = variable, value = estimate) %>%
rename(TotalPop = B01003_001,
ForeignBorn = B99051_005,
MedHHInc = B19013_001,
MobilityDifferentHouse = B07201_003,
MobilityTotal = B07201_001
)
# Let's create new rate variables using mutate
blockgroup21 <-
blockgroup21 %>%
mutate(pctForeign = ifelse(TotalPop > 0, ForeignBorn / TotalPop, 0),
pctMobility = ifelse(MobilityTotal > 0, (MobilityDifferentHouse / MobilityTotal), 0),
year = "2021") %>%
dplyr::select(-ForeignBorn,-MobilityDifferentHouse,-MobilityTotal,-TotalPop)
ggplot() +
geom_sf(data = Philly_block_groups, fill = "grey40") +
geom_sf(data = schools.sf,
show.legend = "point", size = .75) +
mapTheme()
st_c <- st_coordinates
Shooting_victims <-
Shooting_victims %>%
filter(!is.na(point_x)) %>%
filter(!is.na(point_y))
Philly_price_clean <-
Philly_price_clean %>%
mutate(
shooting_nn5 = nn_function(st_c(Philly_price_clean), st_c(Shooting_victims), 5))
nearest_school <- sf::st_nearest_feature(Philly_price_clean, schools.sf)
# convert to rsgeo geometries
x <- rsgeo::as_rsgeo(Philly_price_clean)
y <- rsgeo::as_rsgeo(schools.sf)
# calculate distance
Philly_price_clean$dist_to_school <- rsgeo::distance_euclidean_pairwise(x, y[nearest_school])
nearest_Commercial <- sf::st_nearest_feature(Philly_price_clean, Commercial_Corridors)
# convert to rsgeo geometries
x <- rsgeo::as_rsgeo(Philly_price_clean)
y <- rsgeo::as_rsgeo(Commercial_Corridors)
# calculate distance
Philly_price_clean$dist_to_commerce <- rsgeo::distance_euclidean_pairwise(x, y[nearest_Commercial])
nearest_PPR <- sf::st_nearest_feature(Philly_price_clean, PPR_Sites)
# convert to rsgeo geometries
x <- rsgeo::as_rsgeo(Philly_price_clean)
y <- rsgeo::as_rsgeo(PPR_Sites)
# calculate distance
Philly_price_clean$dist_to_PPR <- rsgeo::distance_euclidean_pairwise(x, y[nearest_PPR])
Philly_Housing_joined <- st_join(Philly_price_clean, blockgroup21, join = st_within)
ggplot() +
geom_sf(data = blockgroup21, fill = "grey40") +
geom_sf(data = Philly_Housing_joined, aes(colour = q5(sale_price)),
show.legend = "point", size = .75) +
mapTheme()
View(Philly_price_clean)
View(Philly_price_clean)
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_price_clean, is.numeric)
for (col in names(Philly_price_clean)[numeric_columns]) {
col_mean <- mean(Philly_price_clean[[col]], na.rm = TRUE)
Philly_price_clean[[col]][is.na(Philly_price_clean[[col]])] <- col_mean
}
stargazer(Philly_price_clean, type = "html")
View(Philly_price_clean)
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
stargazer(Philly_Housing_joined, type = "html")
View(Philly_Housing_joined)
st_drop_geometry(Philly_Housing_joined) %>%
dplr::select(sale_price, MedHHInc) %>%
ggplot(aes(MedHHInc, sale_price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~MedHHInc, ncol = 3, scales = "free") +
labs(title = "Price as a function of median household income") +
plotTheme()
st_drop_geometry(Philly_Housing_joined) %>%
dplyr::select(sale_price, MedHHInc) %>%
ggplot(aes(MedHHInc, sale_price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~MedHHInc, ncol = 3, scales = "free") +
labs(title = "Price as a function of median household income") +
plotTheme()
# st_drop_geometry(Philly_Housing_joined) %>%
#   dplyr::select(sale_price, MedHHInc) %>%
# ggplot(aes(MedHHInc, sale_price)) +
#      geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
#      facet_wrap(~MedHHInc, ncol = 3, scales = "free") +
#      labs(title = "Price as a function of median household income") +
#      plotTheme()
ggplot(Philly_Housing_joined, aes(x = MedHHInc, y = sale_price)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(
title = "Correlation Scatterplot",
x = "Median Household Income",
y = "Home Price"
) +
theme_minimal()
# st_drop_geometry(Philly_Housing_joined) %>%
#   dplyr::select(sale_price, MedHHInc) %>%
# ggplot(aes(MedHHInc, sale_price)) +
#      geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
#      facet_wrap(~MedHHInc, ncol = 3, scales = "free") +
#      labs(title = "Price as a function of median household income") +
#      plotTheme()
ggplot(Philly_Housing_joined, aes(x = MedHHInc, y = sale_price)) +
geom_point(size = .5) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(
title = "Price as a function of median household income",
x = "Median Household Income",
y = "Home Price"
) +
theme_minimal()
ggplot(Philly_Housing_joined, aes(x = houseAge, y = sale_price)) +
geom_point(size = .5) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(
title = "Price as a function of house age",
x = "Age",
y = "Home Price"
) +
theme_minimal()
ggplot() +
geom_sf(data = Philly_Housing_joined, aes(fill = sale_price)) +
scale_fill_gradient(low = "lightblue", high = "darkblue", name = "Legend Label") +
labs(title = "Choropleth Map Title") +
theme_minimal()
ggplot() +
geom_sf(data = blockgroup21, fill = "grey40") +
geom_sf(data = Philly_Housing_joined, aes(colour = q5(sale_price)),
show.legend = "point", size = .75) +
mapTheme()
ggplot() +
geom_sf(data = blockgroup21, fill = "grey40") +
geom_sf(data = Philly_Housing_joined, aes(colour = sale_price),
show.legend = "point", size = .75) +
mapTheme()
mean_sale_price <- Philly_Housing_joined %>%
group_by(GEOID) %>%
summarize(MeanSalePrice = mean(sale_price, na.rm = TRUE))
View(mean_sale_price)
mean_sale_price <- Philly_Housing_joined %>%
group_by(GEOID) %>%
summarize(MeanSalePrice = mean(sale_price))
mean_sale_price <- Philly_Housing_joined %>%
group_by(GEOID) %>%
summarize(MeanSalePrice = mean(sale_price))
blockgroup21 <- left_join(blockgroup21, mean_sale_price, by = "GEOID")
View(blockgroup21)
mean_sale_price <- Philly_Housing_joined %>%
group_by(GEOID) %>%
summarize(MeanSalePrice = mean(sale_price))
blockgroup21 <- st_join(blockgroup21, mean_sale_price, by = "GEOID")
View(blockgroup21)
mean_sale_price <- Philly_Housing_joined %>%
group_by(GEOID) %>%
summarize(MeanSalePrice = mean(sale_price))
blockgroup21 <- st_join(blockgroup21, mean_sale_price, by = "GEOID")
ggplot() +
geom_sf(data = blockgroup21, aes(fill = mean_sale_price)) +
scale_fill_gradient(low = "lightblue", high = "darkblue", name = "Legend Label") +
labs(title = "Choropleth Map Title") +
theme_minimal()
mean_sale_price <- Philly_Housing_joined %>%
group_by(GEOID) %>%
summarize(MeanSalePrice = mean(sale_price))
blockgroup21 <- st_join(blockgroup21, mean_sale_price, by = "GEOID")
blockgroup21$MeanSalePrice.x[is.na(blockgroup21$MeanSalePrice.x)] <- 0
ggplot() +
geom_sf(data = blockgroup21, aes(fill = MeanSalePrice.x)) +
scale_fill_gradient(low = "lightblue", high = "darkblue", name = "Legend Label") +
labs(title = "Choropleth Map Title") +
theme_minimal()
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
stargazer(Philly_Housing_joined, type = "latex")
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
stargazer(Philly_Housing_joined, type = "text")
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
price_variables <- Philly_Housing_joined[, c("houseAge", "shooting_nn5", "dist_to_school")]
stargazer(price_variables, type = "text")
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
price_variables <- Philly_Housing_joined[, c("houseAge", "shooting_nn5", "dist_to_school")]
stargazer(price_variables, type = "text")
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
price_variables <- Philly_Housing_joined[, c("houseAge")]
stargazer(price_variables, type = "text")
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
# price_variables <- Philly_Housing_joined[, c("houseAge")]
# stargazer(price_variables, type = "text")
summary_stats <- Philly_Housing_joined.frame(
Variable = c("houseAge", "shooting_nn5", "dist_to_school"),
N = sapply(Philly_Housing_joined, length),
Mean = sapply(Philly_Housing_joined, mean),
StDev = sapply(Philly_Housing_joined, sd),
Min = sapply(Philly_Housing_joined, min),
Max = sapply(Philly_Housing_joined, max)
)
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
# price_variables <- Philly_Housing_joined[, c("houseAge")]
# stargazer(price_variables, type = "text")
summary_stats <- Philly_Housing_joined(
Variable = c("houseAge", "shooting_nn5", "dist_to_school"),
N = sapply(Philly_Housing_joined, length),
Mean = sapply(Philly_Housing_joined, mean),
StDev = sapply(Philly_Housing_joined, sd),
Min = sapply(Philly_Housing_joined, min),
Max = sapply(Philly_Housing_joined, max)
)
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
# price_variables <- Philly_Housing_joined[, c("houseAge")]
# stargazer(price_variables, type = "text")
summary_stats <- Philly_Housing_joined.frame(
Variable = c("houseAge", "shooting_nn5", "dist_to_school"),
N = sapply(Philly_Housing_joined, length),
Mean = sapply(Philly_Housing_joined, mean),
StDev = sapply(Philly_Housing_joined, sd),
Min = sapply(Philly_Housing_joined, min),
Max = sapply(Philly_Housing_joined, max)
)
# Load Libraries
library(geos)
library(rsgeo)
library(tidyverse)
library(tidycensus)
library(sf)
library(kableExtra)
library(knitr)
library(spdep)
library(caret)
library(ckanr)
library(FNN)
library(grid)
library(gridExtra)
library(ggcorrplot)
library(stargazer)
options(scipen=999)
options(tigris_class = "sf")
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
# price_variables <- Philly_Housing_joined[, c("houseAge")]
# stargazer(price_variables, type = "text")
summary_stats <- Philly_Housing_joined.frame(
Variable = c("houseAge", "shooting_nn5", "dist_to_school"),
N = sapply(Philly_Housing_joined, length),
Mean = sapply(Philly_Housing_joined, mean),
StDev = sapply(Philly_Housing_joined, sd),
Min = sapply(Philly_Housing_joined, min),
Max = sapply(Philly_Housing_joined, max)
)
# Load Libraries
library(geos)
library(rsgeo)
library(tidyverse)
library(tidycensus)
library(sf)
library(kableExtra)
library(knitr)
library(dplyr)
library(spdep)
library(caret)
library(ckanr)
library(FNN)
library(grid)
library(gridExtra)
library(ggcorrplot)
library(stargazer)
options(scipen=999)
options(tigris_class = "sf")
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
# price_variables <- Philly_Housing_joined[, c("houseAge")]
# stargazer(price_variables, type = "text")
summary_data <- Philly_Housing_joined %>%
select(houseAge, shooting_nn5, price) %>%
summarize(
Mean_houseAge = mean(houseAge),
StdDev_houseAge = sd(houseAge),
Mean_shooting_nn5 = mean(shooting_nn5),
StdDev_shooting_nn5 = sd(shooting_nn5),
Mean_price = mean(price),
StdDev_price = sd(price)
)
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
# price_variables <- Philly_Housing_joined[, c("houseAge")]
# stargazer(price_variables, type = "text")
summary_data <- Philly_Housing_joined %>%
select(houseAge, shooting_nn5, dist_to_school) %>%
summarize(
Mean_houseAge = mean(houseAge),
StdDev_houseAge = sd(houseAge),
Mean_shooting_nn5 = mean(shooting_nn5),
StdDev_shooting_nn5 = sd(shooting_nn5),
Mean_price = mean(dist_to_school),
StdDev_price = sd(dist_to_school)
)
kable(summary_data, format = "markdown")
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
# price_variables <- Philly_Housing_joined[, c("houseAge")]
# stargazer(price_variables, type = "text")
summary_data <- Philly_Housing_joined %>%
select(houseAge, shooting_nn5, dist_to_school) %>%
summarize(
Mean_houseAge = mean(houseAge),
StdDev_houseAge = sd(houseAge),
Mean_shooting_nn5 = mean(shooting_nn5),
StdDev_shooting_nn5 = sd(shooting_nn5),
Mean_price = mean(dist_to_school),
StdDev_price = sd(dist_to_school)
)
kable(summary_data, format = "html")
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
# price_variables <- Philly_Housing_joined[, c("houseAge")]
# stargazer(price_variables, type = "text")
summary_data <- Philly_Housing_joined %>%
select(houseAge, shooting_nn5, dist_to_school) %>%
summarize(
Mean = mean(.),
StdDev = sd(.),
Min = min(.),
Max = max(.)
)
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
# price_variables <- Philly_Housing_joined[, c("houseAge")]
# stargazer(price_variables, type = "text")
selected_columns <- Philly_Housing_joined %>%
select(houseAge, shooting_nn5, dist_to_school)
# Compute summary statistics for the selected columns
summary_data <- selected_columns %>%
summarise(
Mean = mean(.),
StdDev = sd(.),
Min = min(.),
Max = max(.)
)
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
# price_variables <- Philly_Housing_joined[, c("houseAge")]
# stargazer(price_variables, type = "text")
selected_columns <- Philly_Housing_joined %>%
select(houseAge, shooting_nn5, dist_to_school)
# Compute summary statistics for the selected columns
summary_data <- selected_columns %>%
summarise(
Variable = "Mean",
Mean = mean(houseAge),
StdDev = sd(houseAge),
Min = min(houseAge),
Max = max(houseAge)
) %>%
bind_rows(
selected_columns %>%
summarise(
Variable = "Mean",
Mean = mean(shooting_nn5),
StdDev = sd(shooting_nn5),
Min = min(shooting_nn5),
Max = max(shooting_nn5)
)
)
kable(summary_data)
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
# price_variables <- Philly_Housing_joined[, c("houseAge")]
# stargazer(price_variables, type = "text")
selected_columns <- Philly_Housing_joined %>%
select(houseAge, shooting_nn5, dist_to_school)
# Compute summary statistics for the selected columns
summary_data <- selected_columns %>%
summarise(
Variable = "Mean",
Mean = mean(houseAge),
StdDev = sd(houseAge),
Min = min(houseAge),
Max = max(houseAge)
) %>%
bind_rows(
selected_columns %>%
summarise(
Variable = "Mean",
Mean = mean(shooting_nn5),
StdDev = sd(shooting_nn5),
Min = min(shooting_nn5),
Max = max(shooting_nn5)
)
)
kable(summary_data, format = "text")
### Input the average value of the variables with missing observations (N/A)
numeric_columns <- sapply(Philly_Housing_joined, is.numeric)
for (col in names(Philly_Housing_joined)[numeric_columns]) {
col_mean <- mean(Philly_Housing_joined[[col]], na.rm = TRUE)
Philly_Housing_joined[[col]][is.na(Philly_Housing_joined[[col]])] <- col_mean
}
# price_variables <- Philly_Housing_joined[, c("houseAge")]
# stargazer(price_variables, type = "text")
selected_columns <- Philly_Housing_joined %>%
select(houseAge, shooting_nn5, dist_to_school)
# Compute summary statistics for the selected columns
summary_data <- selected_columns %>%
summarise(
Variable = "Mean",
Mean = mean(houseAge),
StdDev = sd(houseAge),
Min = min(houseAge),
Max = max(houseAge)
) %>%
bind_rows(
selected_columns %>%
summarise(
Variable = "Mean",
Mean = mean(shooting_nn5),
StdDev = sd(shooting_nn5),
Min = min(shooting_nn5),
Max = max(shooting_nn5)
)
)
kable(summary_data, format = "html")
